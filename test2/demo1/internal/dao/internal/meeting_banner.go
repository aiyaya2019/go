// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MeetingBannerDao is the data access object for table meeting_banner.
type MeetingBannerDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns MeetingBannerColumns // columns contains all the column names of Table for convenient usage.
}

// MeetingBannerColumns defines and stores column names for table meeting_banner.
type MeetingBannerColumns struct {
	Id             string //
	Uuid           string //
	PlatformUuid   string //
	MeetingUuid    string //
	Title          string //
	Background     string //
	ModelFlag      string //
	Datalayout     string //
	Sort           string //
	BackgroundFlag string //
	BigFlag        string //
	SmallFlag      string //
	BannerImg      string //
	PushTerminal   string //
	HtmlFormatId   string //
	CreatedAt      string //
	UpdatedAt      string //
}

// meetingBannerColumns holds the columns for table meeting_banner.
var meetingBannerColumns = MeetingBannerColumns{
	Id:             "id",
	Uuid:           "uuid",
	PlatformUuid:   "platform_uuid",
	MeetingUuid:    "meeting_uuid",
	Title:          "title",
	Background:     "background",
	ModelFlag:      "model_flag",
	Datalayout:     "datalayout",
	Sort:           "sort",
	BackgroundFlag: "background_flag",
	BigFlag:        "big_flag",
	SmallFlag:      "small_flag",
	BannerImg:      "banner_img",
	PushTerminal:   "push_terminal",
	HtmlFormatId:   "html_format_id",
	CreatedAt:      "created_at",
	UpdatedAt:      "updated_at",
}

// NewMeetingBannerDao creates and returns a new DAO object for table data access.
func NewMeetingBannerDao() *MeetingBannerDao {
	return &MeetingBannerDao{
		group:   "default",
		table:   "meeting_banner",
		columns: meetingBannerColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MeetingBannerDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *MeetingBannerDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *MeetingBannerDao) Columns() MeetingBannerColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *MeetingBannerDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MeetingBannerDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MeetingBannerDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
